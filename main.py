

from classes.DataHandler import DataHandler
from classes.DtataChecker import DataChecker
from classes.FileManager import FileManager
from exceptions.InputExeptions import NotEnoughtArgs

from constans import WALLET_FILE_NAME, BALANCE_FILE_NAME

def user_input_data():
    checker: DataChecker = DataChecker()
    data_handler: DataHandler = DataHandler()
    data: list = data_handler.get_data("–í–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤, –¥–∞—Ç—É,—Å—É–º–º—É,–æ–ø–∏—Å–∞–Ω–∏–µ\n\
                    –Ω–∞–ø—Ä–∏–º–µ—Ä: 2024-12-01,–î–æ—Ö–æ–¥,–ó–∞—Ä–ø–ª–∞—Ç–∞,3000\n\
                         –∏–ª–∏: 2024-12-01,–†–∞—Å—Ö–æ–¥,–ö–≤–∞—Ä—Ç–ø–ª–∞—Ç–∞,3000")
    response = []
    try:
        checked_data: list = checker.check_data(data)
        response = checked_data
    except NotEnoughtArgs as e:
        print(e)
        response = user_input_data()
    return response

def make_choice(response: int) -> None:
    file_manager: FileManager = FileManager()
    
    match response:
        case "1":
            print(file_manager.read_file(BALANCE_FILE_NAME))
        case "2":
            checked_data = user_input_data()
            print("üêç File: wallet/main.py | Line: 31 | make_choice ~ checked_data",checked_data)
            file_manager.append_row(WALLET_FILE_NAME, ";".join(checked_data), "a")
            balance: int = int(file_manager.read_file(BALANCE_FILE_NAME))
            change_sum = int(checked_data[3]) if checked_data[1] == "–î–æ—Ö–æ–¥" else -abs(int(checked_data[3]))
            new_ballance = str(balance + change_sum)
            file_manager.update_file(BALANCE_FILE_NAME, new_ballance, "w+")
        case "3":
            pass
        case _:
            print("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤")
            
def main():
    while True:
        print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ –Ω–æ–º–µ—Ä—É –ø—É–Ω–∫—Ç–∞:\n\
                1. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–ª–∞–Ω—Å\n\
                2. –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–ª–∞–Ω—Å\n\
                3. –°–¥–µ–ª–∞—Ç—å –ø–æ–∫—É–ø–∫—É")
        response: str = input()
        make_choice(response)

if __name__ == "__main__":
    main()